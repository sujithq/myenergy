name: After Run Actions
description: 'After Run Steps: Copy Data, Download Parquet, Generate Token, Commit Data'

inputs:
  COMMAND:
    description: 'COMMAND'
    required: true
  APP_ID:
    description: 'APP_ID'
    required: true
  PRIVATE_KEY:
    description: 'PRIVATE_KEY'
    required: true
  DOTNET-VERSION:
    description: 'The .NET SDK version (e.g., 9.0.x, 10.0.x). Will be mapped to TFM like net9.0 or net10.0 for paths.'
    required: true
    default: '10.0.x'

runs:
  using: composite
  steps:
    - name: Copy data files
      shell: bash
      run: |
        set -Eeuo pipefail

        # Map DOTNET-VERSION like 10.0.x -> TFM net10.0
        DOTNET_VER="${{ inputs.DOTNET-VERSION }}"
        TFM="net$(echo "$DOTNET_VER" | awk -F. '{print $1"."$2}')"
        echo "Resolved DOTNET-VERSION='$DOTNET_VER' -> TFM='$TFM'"

        copy() {
          local SRC="$1"
          local DEST="$2"
          echo "‚Ä¢ $SRC ‚Üí $DEST"
          if [[ -f "$SRC" ]]; then
            mkdir -p "$(dirname "$DEST")"
            cp "$SRC" "$DEST"
            echo "  ‚úÖ Copy successful: $DEST"
          else
            echo "  ‚ùå Source file missing: $SRC"
            # exit 1   # keep non-fatal; change to exit 1 if you want hard failure
          fi
        }

        copy "./src/June.Data/bin/Release/${TFM}/Data/data.json" "./src/myenergy/wwwroot/Data/data.json"
        copy "./src/June.Data/bin/Release/${TFM}/Data/consolidated.json" "./src/myenergy/wwwroot/Data/consolidated.json"
        copy "./src/June.Data/bin/Release/${TFM}/Data/data.json" "./src/June.Data/Data/data.json"

    - name: Download ODS Parquet file from Elia
      shell: bash
      run: |
        set -Eeuo pipefail

        PARQUET_URL="https://opendata.elia.be/api/explore/v2.1/catalog/datasets/ods134/exports/parquet?lang=en&timezone=Europe%2FBrussels"
        PARQUET_DEST="./src/myenergy/wwwroot/Data/ods134.parquet"

        echo "üì• Downloading ODS Parquet file from Elia..."
        echo "  URL: $PARQUET_URL"
        echo "  Destination: $PARQUET_DEST"

        mkdir -p "$(dirname "$PARQUET_DEST")"

        if curl -fSL --progress-bar -o "$PARQUET_DEST" "$PARQUET_URL"; then
          FILE_SIZE=$(stat -c%s "$PARQUET_DEST" 2>/dev/null || stat -f%z "$PARQUET_DEST" 2>/dev/null || echo "unknown")
          echo "  ‚úÖ Download successful: $PARQUET_DEST"
          echo "  üìä File size: $FILE_SIZE bytes"
        else
          echo "  ‚ùå Download failed"
          exit 1
        fi

    - name: Generate a token
      id: generate_token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ inputs.APP_ID }}
        private-key: ${{ inputs.PRIVATE_KEY }}

    - name: Commit Data Files
      shell: bash
      env:
        GH_TOKEN: ${{ steps.generate_token.outputs.token }}
      run: |
        set -Eeuo pipefail

        git config --global user.name 'Sujith Quintelier'
        git config --global user.email 'sujith.quintelier@gmail.com'

        commit_if_changed() {
          local FILE_PATH="$1"
          local FILE_DESC="$2"

          if git diff --quiet HEAD -- "$FILE_PATH" ; then
            echo "‚úì No changes to $FILE_DESC"
          else
            echo "üìù Committing changes to $FILE_DESC..."
            git add "$FILE_PATH"
            git commit -m "üìä Update $FILE_DESC for ${{ inputs.COMMAND }}"
            git push origin main
            echo "  ‚úÖ Pushed $FILE_DESC"
          fi
        }

        commit_if_changed "./src/myenergy/wwwroot/Data/data.json" "data file"
        commit_if_changed "./src/myenergy/wwwroot/Data/consolidated.json" "consolidated file"
        commit_if_changed "./src/myenergy/wwwroot/Data/ods134.parquet" "ODS Parquet file"
