@page "/"
@using myenergy.Services
@using myenergy.Models
@inject EnergyDataService DataService

<PageTitle>Solar Dashboard</PageTitle>

<div class="container-fluid">
    @if (_loading)
    {
        <div class="text-center p-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">Loading solar data...</p>
        </div>
    }
    else if (_error != null)
    {
        <div class="alert alert-danger">
            <h4>Error Loading Data</h4>
            <p>@_error</p>
        </div>
    }
    else
    {
        <!-- Header Stats -->
        <div class="row mb-4">
            <div class="col-12">
                <h1 class="display-4">
                    <span class="text-warning">☀️</span> Solar Energy Dashboard
                </h1>
                <p class="lead">System Capacity: 5 kW | Data: @_dateRange</p>
            </div>
        </div>

        <!-- Key Metrics Cards -->
        <div class="row g-3 mb-4">
            <div class="col-md-3">
                <div class="card border-success">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-muted">Total Production</h6>
                        <h3 class="text-success mb-0">@_totals.totalProduction.ToString("N0") kWh</h3>
                        <small class="text-muted">@_dailyData.Count days</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-danger">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-muted">Total Consumption</h6>
                        <h3 class="text-danger mb-0">@_totals.totalConsumption.ToString("N0") kWh</h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-warning">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-muted">Total Export</h6>
                        <h3 class="text-warning mb-0">@_totals.totalExport.ToString("N0") kWh</h3>
                        <small class="text-muted">Sent to grid</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-info">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-muted">Total Import</h6>
                        <h3 class="text-info mb-0">@_totals.totalImport.ToString("N0") kWh</h3>
                        <small class="text-muted">From grid</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Production Days with Mini Charts -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-warning">
                        <h5 class="mb-0">🏆 Top 10 Production Days</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <TopDaysTable Data="@_topDays" />
                            </div>
                            <div class="col-md-4">
                                @if (_topDaysChartData.Any())
                                {
                                    <MiniChart Data="@_topDaysChartData" Title="Top Days" ChartType="bar" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">⚡ Surplus Days (>5 kWh)</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <SurplusTable Data="@_surplusDays" />
                            </div>
                            <div class="col-md-4">
                                @if (_monthlyChartData.Any())
                                {
                                    <MiniChart Data="@_monthlyChartData" Title="Monthly Overview" ChartType="doughnut" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Yearly Totals Table -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">📊 Yearly Summary</h5>
                    </div>
                    <div class="card-body">
                        <YearlyTable Data="@_yearlyTotals" />
                    </div>
                </div>
            </div>
        </div>

        <!-- Period Data Visualization -->
        <div class="row mb-4">
            <div class="col-12">
                <PeriodVisualization DataService="@DataService" />
            </div>
        </div>
    }
</div>

@code {
    private bool _loading = true;
    private string? _error;
    private List<DailySummary> _dailyData = new();
    private List<MonthlySummary> _monthlyData = new();
    private List<DailySummary> _topDays = new();
    private List<(DateTime date, double surplus)> _surplusDays = new();
    private Dictionary<int, (double production, double consumption, double import, double export)> _yearlyTotals = new();
    private (double totalProduction, double totalConsumption, double totalImport, double totalExport) _totals;
    private string _dateRange = "";
    private List<PeriodDataPoint> _topDaysChartData = new();
    private List<PeriodDataPoint> _monthlyChartData = new();

    protected override Task OnInitializedAsync()
    {
        try
        {
            // Data already loaded at app startup
            _dailyData = DataService.GetDailyData();
            _monthlyData = DataService.GetMonthlyData();
            _topDays = DataService.GetTopProductionDays(10);
            _surplusDays = DataService.GetSurplusDays(5).Take(10).ToList();
            _yearlyTotals = DataService.GetYearlyTotals();
            _totals = DataService.GetTotals();

            if (_dailyData.Any())
            {
                var firstDate = _dailyData.First().Date;
                var lastDate = _dailyData.Last().Date;
                _dateRange = $"{firstDate:MMM yyyy} - {lastDate:MMM yyyy}";
            }

            // Prepare chart data
            _topDaysChartData = _topDays.Select(d => new PeriodDataPoint(
                Label: d.Date.ToString("MMM dd"),
                Date: d.Date,
                Production: d.Production,
                Consumption: d.Consumption,
                Import: d.Import,
                Export: d.Export,
                AutarkyPercent: d.Autarky,
                SelfConsumptionPercent: d.Consumption > 0 ? ((d.Consumption - d.Import) / d.Consumption * 100) : 0
            )).ToList();

            _monthlyChartData = _monthlyData.Take(12).Select(m => new PeriodDataPoint(
                Label: new DateTime(m.Year, m.Month, 1).ToString("MMM yyyy"),
                Date: new DateTime(m.Year, m.Month, 1),
                Production: m.Production,
                Consumption: m.Consumption,
                Import: m.Import,
                Export: m.Export,
                AutarkyPercent: m.AutarkyPercent,
                SelfConsumptionPercent: m.SelfConsumptionPercent
            )).ToList();
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _loading = false;
        }
        return Task.CompletedTask;
    }
}

